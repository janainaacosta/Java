/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.a107.exemplomditdi;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author janaina.csilva64
 */
public class Clientes extends javax.swing.JFrame {
    
    // variaveis de acesso global 
    public String g_CPF;
    public String g_nome;
    public String g_sexo;
    public String g_estadoCivil;
    public String g_dataNasc;
   

    public String g_logradouro = "";
    public String g_numero = "";
    public String g_bairro = "";
    public String g_cidade = " ";
    public String g_UF = ""; 
    public String g_CEP = "";
    public String g_endereco = g_logradouro + " " + g_numero + " " + g_bairro + 
            " " + g_cidade + " " + g_UF + " " + g_CEP;

    public String g_telefone;
    public String g_email;

    /**
     * Creates new form Clientes
     */
    public Clientes() {
        initComponents();
        inserirDados(g_nome, g_CPF, g_endereco, g_telefone, g_email, g_sexo, g_estadoCivil, g_dataNasc);
    }

    public void criar_pessoa(
            
            // parametros recebidos da funcao "criar" da classe "Cadastrar"
            String CPF,
            String nome,
            String sexo,
            String estadoCivil,
            String dataNasc,
            String logradouro,
            String numero,
            String bairro,
            String cidade,
            String UF,
            String CEP,
            String telefone,
            String email)
    {
        // junta todas as variaveis de endereco em uma só
        String endereco = logradouro + " " + numero + " " + bairro + " " 
                + cidade + " " + UF + " " + CEP;

        // envia os dados nome, cpf etc para ficarem visíveis na tabela
        inserirDados(nome, CPF, endereco, telefone, email, sexo, estadoCivil, dataNasc);
        
        
        /*
        atribui as variaveis globais os valores recebidos da classe "Cadastrar",
        para as outras funções conseguirem acessar esses dados
        */
        
        g_CPF = CPF;
        g_nome = nome;
        g_sexo = sexo;
        g_estadoCivil = estadoCivil;
        g_dataNasc = dataNasc;

        g_logradouro = logradouro;
        g_numero = numero;
        g_bairro = bairro;
        g_cidade = cidade;
        g_UF = UF;
        g_CEP = CEP;
        g_endereco = g_logradouro + " " + g_numero + " " + g_bairro + " "
                + g_cidade + " " + g_UF + " " + g_CEP;

        g_telefone = telefone;
        g_email = email; 
        
      
    }

    public void inserirDados(
            
            // parametros recebidos da funcao "criarPessoa"
            String nome, 
            String CPF, 
            String endereco,
            String telefone, 
            String email, 
            String sexo,
            String estadoCivil, 
            String dataNasc) { 
        
       
        
        // seleciona a linha onde os dados vao ser inseridos 
        DefaultTableModel tabela = (DefaultTableModel) tblClientes.getModel();
        tabela.setRowCount(0); //seta a linha onde os dados vao ser inseridos

        // adiciona os dados atualizados à tabela 
        Object[] rowData = {CPF, nome, endereco, telefone, email, sexo, estadoCivil, dataNasc};
        tabela.addRow(rowData);
        
        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnVoltarCliente = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCadastrar.setText("Cadastrar cliente");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar cadastro");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnDeletar.setText("Deletar cliente");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "Nome", "Endereço", "Telefone", "E-mail", "Sexo", "Estado civil", "Data de nascimento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblClientes);

        btnVoltarCliente.setText("Voltar");
        btnVoltarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarClienteActionPerformed(evt);
            }
        });

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setText("Buscar por CPF");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1063, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeletar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVoltarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDeletar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCadastrar)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(186, 186, 186)
                .addComponent(btnVoltarCliente)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        //abre a classe "cadastrar"
        Cadastrar cadCliente = new Cadastrar();
        cadCliente.setVisible(true);
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnVoltarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarClienteActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVoltarClienteActionPerformed

   

    public void alterar()  {
        int linhaSelecionada = tblClientes.getSelectedRow();

        if (linhaSelecionada != -1) {
            
            //index de cada item da tabela. Atribui o valor da variável a cada index
            g_CPF = tblClientes.getValueAt(linhaSelecionada, 0).toString();
            g_nome = tblClientes.getValueAt(linhaSelecionada, 1).toString();
            g_sexo = tblClientes.getValueAt(linhaSelecionada, 2).toString();
            g_estadoCivil = tblClientes.getValueAt(linhaSelecionada, 3).toString();
            g_dataNasc = tblClientes.getValueAt(linhaSelecionada, 4).toString();

            
            //modal para alterar os dados
            Alterar alterarCliente = new Alterar();
            alterarCliente.setVisible(true);
            
            //envia os dados da linha selecionada para a funcao "pegarDados", da classe "Alterar"
            alterarCliente.pegarDados(g_CPF, g_nome, g_logradouro,
                    g_numero, g_bairro, g_cidade, g_UF, g_CEP, 
                    g_telefone, g_email, g_sexo, g_estadoCivil, 
                    g_dataNasc, g_endereco);
           
            this.dispose(); //fecha a janela "clientes" e abre a "alterar" 
        } else {
            JOptionPane.showMessageDialog(this,
                    "Por favor, selecione um item para editar.");
        } 
        
    }

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // Obter a linha selecionada na tabela
        alterar();
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
    
    DefaultTableModel tabela = (DefaultTableModel) tblClientes.getModel(); // aqui pega a tabela que vai ser alterada 
    
    int linhaCliente = tblClientes.getSelectedRow();//pega a linha
    if (linhaCliente != -1) { // verifica se alguma linha foi selecionada 
        tabela.removeRow(linhaCliente); // exclui a linha selecionada da tabela
    } else {
        JOptionPane.showMessageDialog(null, 
                "Selecione uma linha para excluir.", "Erro", 
                JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_btnDeletarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnVoltarCliente;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblClientes;
    // End of variables declaration//GEN-END:variables
}
